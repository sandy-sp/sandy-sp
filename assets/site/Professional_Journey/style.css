body {
  display: grid;
  height: 100vh;
  place-items: center;
  font-family: "Roboto";
}
:root {
  --FarbeEins: 95, 173, 159;    /* Soft teal */
  --FarbeZwei: 142, 126, 203;   /* Lavender */
  --FarbeDrei: 247, 158, 129;   /* Coral */
  --FarbeVier: 65, 146, 175;    /* Ocean blue */
  --FarbeFuenf: 242, 183, 97;   /* Golden amber */
}
@keyframes Lottie_move {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translate(-12px, -20px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes Lottie_moveIcon {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translate(-18px, -30px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes Lottie_appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes Lottie_grow {
  0% {
    clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  }
  100% {
    clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  }
}
@keyframes Lottie_growShadow {
  0% {
    height: 80%;
    width: 80%;
  }
  50% {
    height: 160%;
    width: 160%;
  }
  100% {
    height: 80%;
    width: 80%;
  }
}

.wrapper {
  display: flex;
  flex-direction: row;
  position: relative;
  justify-content: center;
  width: 250px;
  height: 700px;
}

.wrapper .line-wrapper {
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  animation: Lottie_grow_vertical 8s linear forwards;
  animation-delay: 0.5s;
  opacity: 0.4;
  clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
}

@keyframes Lottie_grow_vertical {
  0% {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  100% {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

.wrapper .line-wrapper .line {
  overflow: hidden;
  width: 4px;
  height: 30%; /* Increased height for lines */
  background: #cbc9c9;
  border-radius: 10px;
}

/* Adjust line positioning to make them connect better with boxes */
.wrapper .line-wrapper .line-1 {
  transform: rotate(135deg) translateX(25px) translateY(-35px);
  height: 28%;
}

.wrapper .line-wrapper .line-2 {
  transform: rotate(-135deg) translateX(-25px) translateY(-35px);
  height: 32%;
}

.wrapper .line-wrapper .line-3 {
  transform: rotate(135deg) translateX(25px) translateY(-35px);
  height: 32%;
}

.wrapper .line-wrapper .line-4 {
  transform: rotate(-135deg) translateX(-25px) translateY(-35px);
  height: 32%;
}

/* Update the column styles with increased spacing */
.wrapper .column {
  display: grid;
  grid-template-rows: repeat(5, 1fr);
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  gap: 120px; /* Add gap between grid items */
}

/* Remove individual box-wrapper position classes */
.wrapper .column .box-wrapper-1,
.wrapper .column .box-wrapper-2,
.wrapper .column .box-wrapper-3,
.wrapper .column .box-wrapper-4,
.wrapper .column .box-wrapper-5 {
  /* Remove individual transforms */
}

/* Add new dynamic positioning */
.wrapper .column .box-wrapper {
  opacity: 0;
  z-index: 10;
  animation: Lottie_appear 0.5s linear forwards;
  position: relative;
  display: flex;
  justify-content: center;
}

.wrapper .column .box-wrapper:nth-child(odd) {
  justify-self: start;
  transform: translateX(-45px) rotateX(43deg) rotate(53deg) skewY(345deg);
}

.wrapper .column .box-wrapper:nth-child(even) {
  justify-self: end;
  transform: translateX(45px) rotateX(43deg) rotate(53deg) skewY(345deg);
}

/* Update animation delays */
.wrapper .column .box-wrapper:nth-child(1) { animation-delay: 0s !important; }
.wrapper .column .box-wrapper:nth-child(2) { animation-delay: 2s !important; }
.wrapper .column .box-wrapper:nth-child(3) { animation-delay: 4s !important; }
.wrapper .column .box-wrapper:nth-child(4) { animation-delay: 6s !important; }
.wrapper .column .box-wrapper:nth-child(5) { animation-delay: 8s !important; }

.wrapper .column .box-wrapper .box {
  height: 64px;
  aspect-ratio: 1;
  border-radius: 10px;
  position: relative;
  animation: Lottie_move 8s linear infinite;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.wrapper .column .box-wrapper .box-1 {
  background: rgba(var(--FarbeEins), 1);
}

.wrapper .column .box-wrapper .box-1::before {
  animation-delay: 0.5s !important;
  color: rgba(var(--FarbeEins), 1);
}

.wrapper .column .box-wrapper .box-2 {
  background: rgba(var(--FarbeZwei), 1);
  animation-delay: 4s !important;
}

.wrapper .column .box-wrapper .box-2::before {
  animation-delay: 4.5s !important;
  color: rgba(var(--FarbeZwei), 1);
}

.wrapper .column .box-wrapper .box-3 {
  background: rgba(var(--FarbeDrei), 1);
  animation-delay: 8s !important;
}

.wrapper .column .box-wrapper .box-3::before {
  animation-delay: 8.5s !important;
  color: rgba(var(--FarbeDrei), 1);
}

.wrapper .column .box-wrapper .box-4 {
  background: rgba(var(--FarbeVier), 1);
  animation-delay: 2s !important;
}

.wrapper .column .box-wrapper .box-4::before {
  animation-delay: 2.5s !important;
  color: rgba(var(--FarbeVier), 1);
}

.wrapper .column .box-wrapper .box-5 {
  background: rgba(var(--FarbeFuenf), 1);
  animation-delay: 6s !important;
}

.wrapper .column .box-wrapper .box-5::before {
  animation-delay: 6.5s !important;
  color: rgba(var(--FarbeFuenf), 1);
}

.wrapper .column .box-wrapper .box::after {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  background: #cbc9c9;
  top: -10px;
  left: -8px;
  border-radius: 10px;
}

.wrapper .column .box-wrapper .box::before {
  content: attr(data-label);
  white-space: nowrap;
  position: absolute;
  font-size: 2rem;
  top: -69%;
  font-weight: 900;
  animation: Lottie_appear 0.5s linear forwards;
  opacity: 0;
  transform: rotateX(0deg) rotate(361deg) skewX(44deg) translateX(-40px) translateY(-10px) !important;
}

.wrapper .column .box-wrapper .shadow {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 36px;
  z-index: -1;
  left: 24px;
  filter: blur(20px);
  animation: Lottie_growShadow 8s linear infinite;
  transition: filter 0.3s ease, background 0.3s ease;
}

.wrapper .column .box-wrapper .shadow-1 {
  background: rgba(var(--FarbeEins), 0.4);
}

.wrapper .column .box-wrapper .shadow-2 {
  background: rgba(var(--FarbeZwei), 0.4);
}

.wrapper .column .box-wrapper .shadow-3 {
  background: rgba(var(--FarbeDrei), 0.4);
}

.wrapper .column .box-wrapper .shadow-4 {
  background: rgba(var(--FarbeVier), 0.4);
}

.wrapper .column .box-wrapper .shadow-5 {
  background: rgba(var(--FarbeFuenf), 0.4);
}


.popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* Remove fixed width and height */
  max-width: 30%; /* Optional: Limit the maximum width */
  max-height: 90%; /* Optional: Limit the maximum height */
  overflow: auto; /* Add scrollbars if content exceeds max dimensions */
  background: #afafaf93;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  display: none; /* Hidden by default */
  z-index: 1000;
}

.popup-content {
  padding: 20px;
  text-align: center;
}

.close-popup {
  display: inline-block;
  margin-top: 20px;
  padding: 10px 20px;
  background: #1e1e1e;
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: none; /* Hidden by default */
  z-index: 999;
}

/* Add hover effect for glowing animation */
.wrapper .column .box-wrapper:hover .box {
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 40px rgba(255, 255, 255, 0.6);
  transform: scale(1.1); /* Slightly enlarge the tile */
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

/* Optional: Add a glowing effect to the shadow as well */
.wrapper .column .box-wrapper:hover .shadow {
  filter: blur(30px);
  background: rgba(255, 255, 255, 0.5);
  transition: filter 0.3s ease, background 0.3s ease;
}

/* Light Mode (default) */
:root {
  --popup-bg: #ffffff;
  --popup-text: #1e1e1e;
  --hover-bg: rgba(0, 0, 0, 0.8);
}

/* Dark Mode */
@media (prefers-color-scheme: dark) {
  :root {
    --popup-bg: #1e1e1e;
    --popup-text: #f5f5f5;
    --hover-bg: rgba(255, 255, 255, 0.8);
  }

  .box {
    background: rgba(var(--color-teal), 0.8); /* slightly more transparent for dark bg */
  }

  .shadow {
    background: rgba(var(--color-teal), 0.3);
  }
}

/* Then use variables everywhere */
.popup {
  background: var(--popup-bg);
}

.popup-content p {
  color: var(--popup-text);
}

.hover-message {
  background: var(--hover-bg);
  color: var(--popup-text);
}
